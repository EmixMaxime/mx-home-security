version: '3.7'

x-logging: &loki-logging
    driver: loki
    options:
        loki-url: "http://localhost:3100/api/prom/push"

# https://docs.docker.com/compose/compose-file/compose-file-v3/#extension-fields
x-env: &env
    env_file:
        - .env

services:
    rabbit:
        logging: *loki-logging
        restart: unless-stopped

    database:
        logging: *loki-logging
        restart: unless-stopped

    mqtt_broker:
        logging: *loki-logging
        restart: unless-stopped

    rabbit_worker:
        logging: *loki-logging
        restart: unless-stopped
        <<: *env

    celery_beat:
        logging: *loki-logging
        restart: unless-stopped
        <<: *env

    telegram_bot:
        logging: *loki-logging
        restart: unless-stopped
        <<: *env

    web:
#        command: gunicorn hello_django.wsgi:application --bind 0.0.0.0:8000
        ports:
            - 8000:8000
        <<: *env
        logging: *loki-logging
        restart: unless-stopped

    python_process_mqtt:
        logging: *loki-logging
        restart: unless-stopped
        <<: *env

    loki:
        image: grafana/loki:1.5.0
        ports:
            - "3100:3100"
        command: -config.file=/etc/loki/local-config.yaml
        restart: unless-stopped

    promtail:
        image: grafana/promtail:1.5.0
        volumes:
            - /var/log:/var/log
        command: -config.file=/etc/promtail/docker-config.yaml
        restart: unless-stopped

    grafana:
        image: grafana/grafana:7.1.3
        # run grafana with this user (host user), so we don't have any right conflict.
        # https://grafana.com/docs/grafana/latest/administration/configure-docker/#run-grafana-container-using-bind-mounts
        user: ${USER_ID}
        ports:
            - "3000:3000"
        volumes:
            - grafana-data:/var/lib/grafana
        restart: unless-stopped

volumes:
    grafana-data:
        driver: local
