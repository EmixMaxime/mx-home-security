var e=Object.assign;import{o as s,c as t,a as n,w as a,p as o,b as i,r as c,t as l,d as r,e as d,f as u,T as h,m,g,h as b,F as p,i as f,j as v}from"./vendor.2c74d099.js";class y extends HTMLElement{connectedCallback(){this.classList.add("theme-choice"),this.innerHTML=`\n        <div class="form-group form-switch">\n            <input type="checkbox" is="input-switch" id="theme-switcher" aria-label="Changer de thÃ¨me">\n            <label for="theme-switcher" class="form-check-label">\n                <svg class="icon icon-moon l-mr1">\n                    <use xlink:href="${window.SPRITE}#moon"></use>\n                </svg>\n                Dark theme\n              <span class="switch l-ml1"></span>\n            </label>\n        </div>`;const e=this.querySelector("input");e.addEventListener("change",(e=>{const s=e.currentTarget.checked?"light":"dark",t=e.currentTarget.checked?"dark":"light";var n;document.body.classList.add(`theme-${t}`),document.body.classList.remove(`theme-${s}`),n=t,window.localStorage.setItem("theme",n)}));const s=window.localStorage.getItem("theme");s?(document.body.classList.add(`theme-${s}`),e.checked="dark"===s):e.checked=window.matchMedia("(prefers-color-scheme: dark)").matches}}class w extends HTMLElement{connectedCallback(){const e=this.getAttribute("value");this.innerHTML=`\n            <div class="copyable flex items-center">\n                <span>${e}</span>\n                <svg class="icon l-ml1">\n                    <use xlink:href="${window.SPRITE}#clipboard-copy"></use>\n                </svg>\n            </div>\n        `;const s=this.querySelector(".copyable"),t=this;s.addEventListener("click",(function(){const e=document.createRange();e.selectNode(this),window.getSelection().addRange(e);try{document.execCommand("copy")?t.successCb():t.errorCb()}catch(s){t.errorCb()}window.getSelection().removeAllRanges()}))}successCb(){window.sendAlert({type:"success",message:"Copied to clipboard"})}errorCb(){window.sendAlert({type:"error",message:"Cannot copy to clipboard."})}}class k{constructor(e,s){this.data=e,this.status=s}}const C={name:"SvgIcon",props:{name:String},computed:{className(){return`icon icon-${this.name}`},href(){return`/public/svg/sprite.svg#${this.name}`}}},S=a("data-v-3542a5eb")(((e,a,o,i,c,l)=>(s(),t("svg",{class:l.className},[n("use",{"xlink:href":l.href},null,8,["xlink:href"])],2))));C.render=S,C.__scopeId="data-v-3542a5eb";const x={name:"ConfirmActionDialog",components:{SvgIcon:C},props:{title:String,content:String,validText:{type:String,default:"Continue"},cancelText:{type:String,default:"Cancel"},cancelCallback:{type:Function,required:!0},validCallback:{type:Function,required:!0}},methods:{onCancel(){this.cancelCallback()},onValidate(){this.validCallback()}},mounted(){this.$el.focus()}},A=a("data-v-1365a412");o("data-v-1365a412");const T={class:"dialog-box-body"},M={class:"dialog-icon"},L={class:"copy variant--content dialog-content"},E={class:"h5"},D={class:"dialog-box-actions flex"};i();const F=A(((e,a,o,i,u,h)=>{const m=c("svg-icon");return s(),t("div",{class:"dialog-popup",tabindex:"0",onKeydown:a[4]||(a[4]=d(((...e)=>h.onCancel&&h.onCancel(...e)),["esc"])),onClick:a[5]||(a[5]=(...e)=>h.onCancel&&h.onCancel(...e))},[n("div",{class:"dialog-box box",onClick:a[3]||(a[3]=r((()=>{}),["stop"]))},[n("div",T,[n("div",M,[n(m,{class:"dialog-icon-svg",name:"exclamation"})]),n("div",L,[n("p",E,l(o.title),1),n("p",null,l(o.content),1)]),n("div",D,[n("button",{class:"btn",onClick:a[1]||(a[1]=(...e)=>h.onValidate&&h.onValidate(...e))},l(o.validText),1),n("button",{class:"btn btn-transparent",onClick:a[2]||(a[2]=(...e)=>h.onCancel&&h.onCancel(...e))},l(o.cancelText),1)])])])],32)}));x.render=F,x.__scopeId="data-v-1365a412";const $={name:"App",components:{ConfirmActionDialog:x},data:()=>({confirmDialog:null}),computed:{isDialog(){return null!==this.confirmDialog}}};$.render=function(e,n,a,o,i,l){const r=c("confirm-action-dialog");return s(),t(h,{name:"dialog"},{default:u((()=>[l.isDialog?(s(),t(r,m({key:0},i.confirmDialog),null,16)):g("",!0)])),_:1})};const R={props:{alerts:{type:Array,required:!0}},methods:{hide(e){console.log("hide")},removeAlert(e){this.$parent.removeAlert(e)},bubbleTypeClass:e=>`alert-bubble--${e.type}`}},j={class:"alert-block"},q={class:"alert-bubble"},H={class:"copy__body flex items-center"};R.render=function(e,a,o,i,c,r){return s(),t("div",j,[n(b,{name:"alert"},{default:u((()=>[(s(!0),t(p,null,f(o.alerts,((e,a)=>(s(),t("div",{key:a,class:"alert",onClick:s=>r.removeAlert(e)},[n("div",q,[n("span",{class:["alert-bubble--type",[r.bubbleTypeClass(e)]]},null,2)]),n("div",H,l(e.message),1)],8,["onClick"])))),128))])),_:1})])};const I={name:"Alerts",components:{AppAlert:R},data:()=>({alerts:[]}),methods:{sendAlert(e){this.alerts.push(e),window.setTimeout((()=>{this.removeAlert(e)}),3500)},removeAlert(e){this.alerts.splice(this.alerts.indexOf(e),1)}}};I.render=function(e,n,a,o,i,l){const r=c("app-alert");return s(),t(r,{alerts:i.alerts},null,8,["alerts"])};const _=v($).mount("#app"),N=v(I).mount("#alerts");window.sendAlert=N.sendAlert;const O=new class{constructor(e){this.mounted=e}open(s,t,n){const a={validCallback:()=>{this.close(),t()},cancelCallback:()=>{this.close(),n&&n()}};this.mounted.$data.confirmDialog=e(e({},s),a)}close(){this.mounted.$data.confirmDialog=null}}(_);class P extends HTMLFormElement{constructor(){super(),this.dialogManager=O,this.submitListener=null,this.form=null,this.asyncSubmit=this.asyncSubmit.bind(this)}connectedCallback(){const e=this;if(this.form=this,this.statusFieldName=e.dataset.statusField,this.statusFieldName)this.trueSuccessMessage=e.dataset.trueSuccess,this.falseSuccessMessage=e.dataset.falseSuccess,this.statusField=this.form[this.statusFieldName];else if(this.successMessage=e.dataset.successMessage,!this.successMessage)throw new Error("Missing data-success-message property.");this.isDialog="dialog"in e.dataset,this.isDialog&&(this.dialog={title:e.dataset.dialogTitle,content:e.dataset.dialogContent}),this.submitListener=e.addEventListener("submit",(e=>{e.preventDefault(),this.isDialog?this.openDialog():this.asyncSubmit()}))}disconnectedCallback(){this.this.submitListener&&this.removeEventListener("click",this.submitListener)}openDialog(){this.dialogManager.open(this.dialog,this.asyncSubmit)}sendSuccessAlert(){if(this.statusField){if(this.statusField.checked&&this.trueSuccessMessage)return window.sendAlert({type:"success",message:this.trueSuccessMessage});if(!this.statusField.checked&&this.falseSuccessMessage)return window.sendAlert({type:"success",message:this.falseSuccessMessage})}return window.sendAlert({type:"success",message:this.successMessage})}asyncSubmit(){const s=new FormData(this.form);(async function(s,t,n={}){if(n.body instanceof FormData&&(n.body=Object.fromEntries(n.body)),n.body&&"object"==typeof n.body&&(n.body=JSON.stringify(n.body)),n=e({method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json","X-Requested-With":"XMLHttpRequest","X-CSRFToken":t}},n),"string"!=typeof s)throw new TypeError(`url parameter should be a string not ${typeof s}.`);const a=await fetch(s,n);if(204===a.status)return null;const o=await a.json();if(a.ok)return o;throw console.log({data:o}),new k(o,a.status)})(this.form.action,CSRF,{body:s}).then((()=>{this.sendSuccessAlert()})).catch((e=>{400===e.status&&(console.log(this.form.elements),console.log("wrong form")),console.error(e)}))}}class V extends HTMLElement{connectedCallback(){this.innerHTML=`\n            <button class="btn btn-primary">${this.innerText}</button>\n        `;const e=this.querySelector(".btn");this.clickEvent=e.addEventListener("click",(()=>location.reload()))}disconnectedCallback(){window.removeEventListener("click",this.clickEvent)}}window.dialogManager=O,customElements.define("custom-form",P,{extends:"form"}),customElements.define("theme-choice",y),customElements.define("copyable-value",w),customElements.define("reload-button",V);
