version: '3.8'


x-build: &build
    build:
        context: ./app
        args:
            USER_ID: ${USER_ID}
            GROUP_ID: ${GROUP_ID}

x-env: &env
    env_file:
        - .env
        - ~/.device

services:
    redis-broker:
        volumes:
            - dev-redis-broker-data:/data
    database:
        volumes:
            - dev-psql-data:/var/lib/postgresql/data

    mqtt_broker:
        volumes:
            - ./config/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
            - ./config/mosquitto/passwd:/mosquitto/config/passwd

    celery_worker:
        <<: *build
        <<: *env
        volumes:
            - ./app/:/usr/src/app/

    celery_beat:
        <<: *build
        <<: *env
        volumes:
            - ./app/:/usr/src/app/

    web:
        <<: *build
        <<: *env
        volumes:
            - ./app/:/usr/src/app/

    python_process_mqtt:
        <<: *build
        <<: *env
        volumes:
            - ./app/:/usr/src/app/

    telegram_bot:
        <<: *build
        <<: *env
        volumes:
            - ./app/:/usr/src/app/

    flower:
        build:
            context: ./docker/flower
        environment:
            - CELERY_BROKER_URL=redis://redis-broker:6379/0
            - FLOWER_PORT=5000
        ports:
            - 5000:5000
        depends_on:
            - celery_worker
        networks:
            - redis-broker

    node:
        user: '${USER_ID}:${GROUP_ID}'
        build:
            context: ./tools/docker/node
        command: npm run dev
        working_dir: /usr/src/app
        volumes:
            - ./app:/usr/src/app
        ports:
            - 3000:3000
    vim:
      build:
        context: ./tools/docker/dev
      volumes:
        - ~/.vim/:/home/house/.vim/
        - ~/.config/coc/:/home/house/.config/coc
        - ~/.vimrc/:/home/house/.vimrc
        - ./app/:/usr/src/app/
      command: bash -c "source /home/house/.nvm/nvm.sh && node -v && vim"
      networks:
        - redis-broker
        - webapp_backend
        - backend_mqtt

networks:
    backend_mqtt:
        external: true

volumes:
    camera_videos:
        external: true
    dev-redis-broker-data:
        driver: local
    dev-psql-data:
        driver: local
