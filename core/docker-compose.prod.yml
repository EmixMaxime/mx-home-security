version: '3.8'

x-logging: &loki-logging
    driver: loki
    options:
        loki-url: "http://localhost:3100/api/prom/push"

# https://docs.docker.com/compose/compose-file/compose-file-v3/#extension-fields
x-env: &env
    env_file:
        - .env
        - ~/.device

x-coreimage: &coreimage
    image: bobbyhome/core:0.7.0

services:
    redis-broker:
        logging: *loki-logging
        restart: unless-stopped
        volumes:
            - redis-data:/data
    database:
        logging: *loki-logging
        restart: unless-stopped
        volumes:
            - psql-data:/var/lib/postgresql/data

    mqtt_broker:
        logging: *loki-logging
        restart: unless-stopped
        volumes:
            - ./config/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
            - ./config/mosquitto/passwd:/mosquitto/config/passwd

    loki:
        image: grafana/loki:2.1.0
        ports:
            - "3100:3100"
        command: -config.file=/etc/loki/local-config.yaml
        volumes:
            - type: bind
              source: ./config/loki/local-config.yml
              target: /etc/loki/local-config.yaml
        restart: unless-stopped

    promtail:
        image: grafana/promtail:2.1.0
        volumes:
            - /var/log:/var/log
        restart: unless-stopped

    grafana:
        image: grafana/grafana:7.4.0
        # run grafana with this user (host user), so we don't have any right conflict.
        # https://grafana.com/docs/grafana/latest/administration/configure-docker/#run-grafana-container-using-bind-mounts
        ports:
            - "3000:3000"
        user: "472"
        volumes:
            - grafana-data:/var/lib/grafana
        restart: unless-stopped

    celery_worker:
        <<: *coreimage
        logging: *loki-logging
        restart: unless-stopped
        <<: *env
        volumes:
            - camera_videos:/var/lib/house/video

    celery_beat:
        <<: *coreimage
        logging: *loki-logging
        restart: unless-stopped
        <<: *env

    telegram_bot:
        <<: *coreimage
        logging: *loki-logging
        restart: unless-stopped
        <<: *env

    web:
        <<: *coreimage
        command: bash -c "python manage.py migrate --no-input && python register_device.py && python manage.py runserver --noreload 0.0.0.0:8000"
        #        command: gunicorn hello_django.wsgi:application --bind 0.0.0.0:8000
        ports:
            - 8000:8000
        <<: *env
        logging: *loki-logging
        restart: unless-stopped

    python_process_mqtt:
        <<: *coreimage
        logging: *loki-logging
        restart: unless-stopped
        <<: *env

networks:
    backend_mqtt:
        external: true

volumes:
    camera_videos:
        external: true
    grafana-data:
        driver: local
    redis-data:
        driver: local
    psql-data:
        driver: local
